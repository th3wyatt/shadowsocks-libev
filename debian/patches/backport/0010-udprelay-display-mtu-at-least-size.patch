From: Max Witten <pexcn97@gmail.com>
Date: Mon, 5 Mar 2018 21:37:12 +0800
Subject: udprelay: display mtu at least size

(cherry picked from commit e7ad7fc73e46112756272423e5e0694673849193)
---
 src/udprelay.c | 14 +++++++-------
 src/udprelay.h |  3 ++-
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/src/udprelay.c b/src/udprelay.c
index 4dbe241..49cbcce 100644
--- a/src/udprelay.c
+++ b/src/udprelay.c
@@ -700,7 +700,7 @@ remote_recv_cb(EV_P_ ev_io *w, int revents)
         goto CLEAN_UP;
     } else if (r > packet_size) {
         if (verbose) {
-            LOGI("[udp] remote_recv_recvfrom fragmentation");
+            LOGI("[udp] remote_recv_recvfrom fragmentation, MTU at least be: %zd", r + PACKET_HEADER_SIZE);
         }
     }
 
@@ -774,7 +774,7 @@ remote_recv_cb(EV_P_ ev_io *w, int revents)
 
     if (buf->len > packet_size) {
         if (verbose) {
-            LOGI("[udp] remote_recv_sendto fragmentation");
+            LOGI("[udp] remote_recv_sendto fragmentation, MTU at least be: %zd", buf->len + PACKET_HEADER_SIZE);
         }
     }
 
@@ -878,7 +878,7 @@ server_recv_cb(EV_P_ ev_io *w, int revents)
         goto CLEAN_UP;
     } else if (buf->len > packet_size) {
         if (verbose) {
-            LOGI("[udp] UDP server_recv_recvmsg fragmentation");
+            LOGI("[udp] UDP server_recv_recvmsg fragmentation, MTU at least be: %zd", buf->len + PACKET_HEADER_SIZE);
         }
     }
 
@@ -900,7 +900,7 @@ server_recv_cb(EV_P_ ev_io *w, int revents)
         goto CLEAN_UP;
     } else if (r > packet_size) {
         if (verbose) {
-            LOGI("[udp] server_recv_recvfrom fragmentation");
+            LOGI("[udp] server_recv_recvfrom fragmentation, MTU at least be: %zd", r + PACKET_HEADER_SIZE);
         }
     }
 
@@ -1184,7 +1184,7 @@ server_recv_cb(EV_P_ ev_io *w, int revents)
 
     if (buf->len > packet_size) {
         if (verbose) {
-            LOGI("[udp] server_recv_sendto fragmentation");
+            LOGI("[udp] server_recv_sendto fragmentation, MTU at least be: %zd", buf->len + PACKET_HEADER_SIZE);
         }
     }
 
@@ -1201,7 +1201,7 @@ server_recv_cb(EV_P_ ev_io *w, int revents)
 
     if (buf->len - addr_header_len > packet_size) {
         if (verbose) {
-            LOGI("[udp] server_recv_sendto fragmentation");
+            LOGI("[udp] server_recv_sendto fragmentation, MTU at least be: %zd", buf->len - addr_header_len + PACKET_HEADER_SIZE);
         }
     }
 
@@ -1321,7 +1321,7 @@ init_udprelay(const char *server_host, const char *server_port,
 
     // Initialize MTU
     if (mtu > 0) {
-        packet_size = mtu - 1 - 28 - 2 - 64;
+        packet_size = mtu - PACKET_HEADER_SIZE;
         buf_size    = packet_size * 2;
     }
 
diff --git a/src/udprelay.h b/src/udprelay.h
index 0068adf..4b801a3 100644
--- a/src/udprelay.h
+++ b/src/udprelay.h
@@ -44,7 +44,8 @@
 
 #define MAX_UDP_PACKET_SIZE (65507)
 
-#define DEFAULT_PACKET_SIZE 1397 // 1492 - 1 - 28 - 2 - 64 = 1397, the default MTU for UDP relay
+#define PACKET_HEADER_SIZE (1 + 28 + 2 + 64)
+#define DEFAULT_PACKET_SIZE 1397 // 1492 - PACKET_HEADER_SIZE = 1397, the default MTU for UDP relay
 
 typedef struct server_ctx {
     ev_io io;
